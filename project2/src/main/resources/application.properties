spring.application.name=project2
#spring.data.mongodb.uri=mongodb://mongodb-service:27017/springK8sdatabase


#Atlas Server connection 
#spring.data.mongodb.uri=mongodb+srv://harinadh14:N%40dh2306@atlascluster.9fb52n9.mongodb.net/SpringBootDB?ssl=true&sslInvalidHostNameAllowed=true&trustAllCertificates=true

#localserver
#spring.data.mongodb.uri=mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.4.2
spring.data.mongodb.uri=mongodb://localhost:27017/SpringBootDB

#spring.data.mongodb.host=mongodb-service
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=osspringK8sdatabase




# if you want to authenticate your java and JMX using hte SSL, In that case create a trust store and makke ssl true as below. kindl of mTLS.

# Create password file

#sudo touch /opt/jmx/jmxremote.password
#sudo bash -c 'echo "monitorRole monitor_password" > /opt/jmx/jmxremote.password'
#sudo bash -c 'echo "controlRole control_password" >> /opt/jmx/jmxremote.password'
#sudo chmod 600 /opt/jmx/jmxremote.password

# Create access file
#sudo touch /opt/jmx/jmxremote.access
#sudo bash -c 'echo "monitorRole readonly" > /opt/jmx/jmxremote.access'
#sudo bash -c 'echo "controlRole readwrite" >> /opt/jmx/jmxremote.access'
#sudo chmod 600 /opt/jmx/jmxremote.access



# Download the MongoDB certificate
#curl -o mongo.crt https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem

# Import it into a new truststore
#keytool -importcert -alias mongodbAtlas -file mongo.crt -keystore mongodb-truststore.jks -storepass truststore_password -noprompt

# Move the truststore to your preferred location
#sudo mv mongodb-truststore.jks /opt/jmx/


#spring.application.name=project2
#spring.data.mongodb.uri=mongodb+srv://harinadh14:N%40dh2306@atlascluster.9fb52n9.mongodb.net/SpringBootDB?ssl=true
#spring.data.mongodb.ssl.enabled=true
#spring.data.mongodb.ssl.trust-store=/opt/jmx/mongodb-truststore.jks
#spring.data.mongodb.ssl.trust-store-password=your_truststore_password

